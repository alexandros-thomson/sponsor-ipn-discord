// Dependencies
const fs = require('fs').promises
const path = require('path')
const { MessageEmbed } = require('discord.js')

// Constants (set via environment or replace with your values)
const THREADS_DIR = path.join(__dirname, '..', '..', 'threads')
const DISCORD_CHANNEL_ID = process.env.SPONSOR_CHANNEL_ID

/**
 * Handle a GitHub sponsorship.created event
 * @param {object} sponsorship GitHub webhook payload .sponsorship object
 */
async function handleSponsorshipCreated(sponsorship) {
  // Extract metadata
  const sponsorLogin = sponsorship.sponsor.login
  const tierName    = sponsorship.tier.name
  const ts          = new Date(sponsorship.created_at).toISOString()
  const filename    = `relic-drop--${sponsorLogin}.json`
  const filePath    = path.join(THREADS_DIR, filename)

  // Build JSON metadata
  const metadata = {
    sponsor: sponsorLogin,
    sponsor_id: sponsorship.sponsor.id,
    tier: tierName,
    timestamp: ts,
    sponsorship_id: sponsorship.id,
    thread_id: null  // fill in if you reply back to the thread
  }

  // Write JSON file to /threads
  await fs.mkdir(THREADS_DIR, { recursive: true })
  await fs.writeFile(filePath, JSON.stringify(metadata, null, 2))

  // Create a Discord embed
  const embed = new MessageEmbed()
    .setTitle('New Sponsor Relic Dropped')
    .addField('Sponsor', sponsorLogin, true)
    .addField('Tier', tierName, true)
    .addField('Time', ts, false)
    .setColor('#E7A900')
    .setFooter('Audit-safe relic emission')

  // Post embed into your sponsor-ops channel
  const channel = global.client.channels.cache.get(DISCORD_CHANNEL_ID)
  if (channel) {
    const message = await channel.send({ embeds: [embed] })
    // Optionally update JSON with the Discord message ID
    metadata.thread_id = message.id
    await fs.writeFile(filePath, JSON.stringify(metadata, null, 2))
  }
}

module.exports = { handleSponsorshipCreated }
# 🌀 Sponsor Scroll

An audit-safe relic that chronicles every sponsor pledge, archetype unlock, and shrine echo.

---

## Relic 005: The Fifth Echo

Timestamp: 2025-08-03T02:15:42-04:00  
Archetype: ShrineSeeker  
Amount: 10.00 USD  
Payer: lorekeeper@domain.com  
TXN_ID: TXN20250803021542  
Terrain Mutation:
- Badge built via `build-badge.sh`
- Discord ping sent to #sponsor-hall
- Dashboard tile updated (shrine-seeker.png)

Notes:
- First double-digit pledge celebrated with animated shrine pulse.
- Linked preview: https://your-domain.com/badges/shrine-seeker.png

## Relic 004: The Fourth Echo
…  

---

## Pending Relics

> _“The shrine awaits the next signal.”_
