#// scripts/animateTile.js
import fs from 'fs';
import path from 'path';

const tileId = 'echo-001';
const dataPath = path.join(process.cwd(), '_data', 'sponsor_tiles.json');

// load existing tiles
const tiles = JSON.parse(fs.readFileSync(dataPath, 'utf-8'));

// find and update our relic tile
const tile = tiles.find(t => t.id === tileId);
if (tile) {
  tile.animation = 'pulse';
  tile.lastPulsed = new Date().toISOString();
}

// write back
fs.writeFileSync(dataPath, JSON.stringify(tiles, null, 2));
console.log(`Tile ${tileId} animated at ${tile.lastPulsed}`); This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow will install Deno then run `deno lint` and `deno test`.
# For more information see: https://github.com/denoland/setup-deno

name: Deno

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Setup repo
        uses: actions/checkout@v4

      - name: Setup Deno
        # uses: denoland/setup-deno@v1
        uses: denoland/setup-deno@61fe2df320078202e33d7d5ad347e7dcfa0e8f31  # v1.1.2
        with:
          deno-version: v1.x

      # Uncomment this step to verify the use of 'deno fmt' on each commit.
      # - name: Verify formatting
      #   run: deno fmt --check

      - name: Run linter
        run: deno lint

      - name: Run tests
        run: deno test -A
# .github/workflows/deno-test.yml
name: Deno Test Ritual

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run Deno tests
        run: deno test --allow-all
name: Deno CI Ritual

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Deno
      uses: denoland/setup-deno@v1
      with:
        deno-version: v1.x

    - name: Run tests
      run: deno test --allow-read --allow-env --allow-net
